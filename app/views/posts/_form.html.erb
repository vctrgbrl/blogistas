<%= form_with(model: post, html: {id: "post"}) do |form| %>
  <% if post.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
        <% post.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :title, "Título", style: "display: block" %>
    <%= form.text_field :title, class: "form-control"%>
  </div>

  <div>
    <label for="tags">Tags</label>
    <div class="container d-flex" id="tags-added">
      <% @tags.each do |tag| %>
        <div id=<%="tag-" + tag.name %>>
          <input name="post[tags][]" style="display: none;" value=<%= tag.name %>/>
          <span class="badge bg-primary m-2 ">
            <%= tag.name %>
              <i class="bi bi-x-lg ml-1" onclick="(() => RemoveTag('<%= tag.name %>'))()"></i>
          </span>
        </div>
      <% end %>
    </div>
    <div class="row">
      <div class="col-8">
        <input type="text" class="form-control" id="tags"/>
      </div>
      <div class="col">
        <button type="button" onclick="AdicionarTag()" class="btn btn-primary">Adicionar</button>
      </div>
    </div>
  </div>

  <div>
    <%= form.label :thumbnail, "Thumbnail" %>
    <%= form.file_field :thumbnail, class: "form-control" %>
  </div>

  <div>
    <%= form.label :snippet, "Trecho da publicação" %>
    <%= form.text_field :snippet, class: "form-control" %>
  </div>

  <div>
    <label for="">Arquivo Markdown</label>
    <input type="file" class="form-control" id="markdown-file">
  </div>

  <div>
    <%= form.label :content, style: "display: block" %>
    <%= form.rich_text_area :content, class: "form-control"%>
  </div>
  <script defer type="text/javascript" charset="utf-8">
    function OnLoad(event) {
        const converter = new showdown.Converter();
        const html = converter.makeHtml(event.target.result);
        var element = document.querySelector("trix-editor");
        element.editor.insertHTML(html);
    }
    document.getElementById("markdown-file").addEventListener("change", function handleAddFile(f) {
        if (this.files.length === 0) return;
        const reader = new FileReader();
        reader.onload = OnLoad;
        reader.readAsText(this.files[0]);
    });
  </script>
  <script type="text/javascript" charset="utf-8">
    var doc = document.getElementById("tags");
    var d = document.getElementById("tags-added");
    var tag_set = new Set();
    function AdicionarTag() {
        var tag = doc.value.trim().split(" ").map(s => s[0].toUpperCase() + s.slice(1)).join("");
        if (tag_set.has(tag)) return;
        tag_set.add(tag);
        var di = document.createElement("div");
        var s = document.createElement("input");
        s.type = "text";
        s.name = "post[tags][]";
        s.value = tag;
        s.style = "display: none;"
        di.appendChild(s);
        var el = document.createElement("span");
        var b = document.createElement("i");
        b.className = "bi bi-x-lg ml-1";
        el.className = "badge bg-primary m-2"
        el.textContent = tag;
        di.id = "tag-" + tag;
        di.appendChild(el);
        b.onclick = () => RemoveTag(tag);
        el.appendChild(b);
        d.appendChild(di);
    }

    function RemoveTag(tagName) {
        tag_set.delete(tagName);
        document.getElementById("tag-" + tagName).remove();
    }
  </script>

  <div>
    <%= form.submit class: "btn btn-primary" %>
  </div>
<% end %>
